{"version":3,"sources":["utils/MyThreeUtil.js","config/leaf.js","utils/movement.js","components/Disc.jsx","components/WindStrength.jsx","components/OutPut.jsx","views/Home.js","App.js","index.js"],"names":["createPoints","name","options","particleProps","imageUrl","range","size","count","opacity","texLoader","TextureLoader","geo","Geometry","tex","load","center","Vector2","rotation","mat","PointsMaterial","map","transparent","sizeAttenuation","blending","AdditiveBlending","side","DoubleSide","alphaTest","i","x","Math","random","y","z","particle","Vector3","key","vertices","push","points","Points","castShadow","leaf1option","leaf1Props","velocityY","velocityX","velocityZ","PI","mass","currentHorizontalOffset","maxHorizontalOffset","swingVelocity","currentDeg","minDeg","maxDeg","degVelocity","falledMatName","groupName","leaf2option","leaf2Props","leaf3option","leaf3Props","freeFall","groundTopOffest","leafMats","groups","naturalProps","k","grp","leaf","scale","sprite","Sprite","position","set","createSprite","add","Disc","onTurn","discLabel","sliderLabel","useState","deg","setDeg","className","style","transform","id","type","min","max","onChange","newDeg","marks","0","90","180","270","360","tooltipVisible","WindStrength","strength","setStrength","step","v","OutPut","windDirection","windStrength","a","equipment","materials","audioRef","useRef","rerender","renderer","scene","camera","render","particleTrajectory","falledLeaf1Mat","falledLeaf2Mat","falledLeaf3Mat","falledLeaf4Mat","spining","particleTrajectoryWithoutWind","sin","cos","particleTrajectoryWithWind","addLeaves","leaf1Points","leaf2Points","leaf3Points","falledLeaf1Group","Group","falledLeaf2Group","falledLeaf3Group","falledLeaf4Group","window","group2","Object","assign","animate","children","forEach","item","geometry","material","verticesNeedUpdate","requestAnimationFrame","init","webglOutput","document","getElementById","Scene","outputDom","clientWidth","clientHeight","PerspectiveCamera","lookAt","initCamera","clearColor","width","height","WebGLRenderer","shadowMap","enabled","shadowMapSoft","PCFSoftShadowMap","setSize","setClearColor","Color","initRenderer","direcLight","DirectionalLight","initDirectionalLight","appendChild","domElement","controler","callback","orbit","OrbitControls","addEventListener","bind","initOrbitControls","maxPolarAngle","minDistance","maxDistance","useEffect","loader","falledLeaf1Map","SpriteMaterial","falledLeaf2Map","falledLeaf3Map","falledLeaf4Map","groundTex","groundAo","wrapT","RepeatWrapping","wrapS","repeat","groundMat","MeshLambertMaterial","aoMap","skinning","flatShading","color","createMaterials","urls","CubeTextureLoader","background","addSky","axesHelper","AxesHelper","addAxesHelper","groundGeo","PlaneBufferGeometry","ground","Mesh","receiveShadow","addGround","degValue","current","volume","muted","fontSize","ref","src","loop","autoPlay","Home","App","path","ReactDOM"],"mappings":"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","file":"static/js/main.bad7a3c2.chunk.js","sourcesContent":["import {Scene, PerspectiveCamera, WebGLRenderer, Color, PCFSoftShadowMap,\r\nSpotLight, AmbientLight, PointLight, Geometry, Points,\r\nPointsMaterial, Vector3, TextureLoader, AdditiveBlending, DoubleSide, DirectionalLight, Vector2,\r\nSprite} from 'three'\r\nimport { OrbitControls } from \"three/examples/jsm/controls/OrbitControls\"\r\n\r\n/**\r\n * 初始化相机\r\n * @param {domElement} outputDom 输出的dom元素 \r\n */\r\nexport function initCamera(outputDom) {\r\n    const {clientWidth:width, clientHeight:height} = outputDom\r\n    const k = width / height; //窗口宽高比\r\n    // const s = 100; //三维场景显示范围控制系数，系数越大，显示的范围越大\r\n    //创建相机对象\r\n    const camera = new PerspectiveCamera(45, k, 0.1, 10000);\r\n    camera.position.set(20, 40, 10)\r\n    camera.lookAt(20, 30, 0)\r\n    return camera\r\n}\r\n\r\n/**\r\n * 初始化渲染器\r\n * @param {domElement} outputDom 输出的dom元素\r\n * @param {number} clearColor 十六进制颜色\r\n */\r\nexport function initRenderer(outputDom, clearColor){\r\n    const {clientWidth:width, clientHeight:height} = outputDom\r\n    const renderer = new WebGLRenderer()\r\n    renderer.shadowMap.enabled = true;\r\n    renderer.shadowMapSoft = true;\r\n    renderer.shadowMap.type = PCFSoftShadowMap;\r\n    renderer.setSize(width, height)\r\n    renderer.shadowMap.enabled = true\r\n    renderer.setClearColor(new Color(clearColor))\r\n    return renderer\r\n}\r\n\r\n/**\r\n * 初始化场景\r\n */\r\nexport function initScene() {\r\n    const scene = new Scene()\r\n    return scene\r\n}\r\n\r\n/**\r\n * 初始化鼠标控制器\r\n * @param {Camera} camera 相机\r\n * @param {WebglRenderer} renderer 渲染器\r\n * @param {Function} callback 相机位置改变后的回调函数\r\n */\r\nexport const initOrbitControls = (camera, renderer, callback) => {\r\n    const orbit = new OrbitControls(camera, renderer.domElement);\r\n    orbit.addEventListener('change', callback.bind(this))\r\n    return orbit\r\n}\r\n\r\n/**\r\n * 初始化聚光灯光源 \r\n * @param {Scene} scene 场景对象\r\n */\r\nexport const initSpotLight = (scene) => {\r\n    const spotLight = new SpotLight(0xffffff)\r\n    spotLight.shadow.mapSize.width = 512;\r\n    spotLight.shadow.mapSize.height = 512;\r\n    spotLight.shadow.camera.fov = 15;\r\n    spotLight.castShadow = true;\r\n    spotLight.decay = 2;\r\n    spotLight.penumbra = 0.05;\r\n    spotLight.position.set(100, 200, 300)\r\n    const ambientLight = new AmbientLight(0x343434)\r\n    scene.add(spotLight)\r\n    scene.add(ambientLight)\r\n    // const debugCamera = new CameraHelper(spotLight.shadow.camera)\r\n    // scene.add(debugCamera)\r\n    // const lightHelper = new SpotLightHelper(spotLight)\r\n    // scene.add(lightHelper)\r\n    return spotLight\r\n}\r\n\r\n/**\r\n * 初始化点光源 \r\n * @param {Scene} scene 场景对象\r\n */\r\nexport const initPointLight = (scene) => {\r\n    const pointLight = new PointLight(0xffffff, 1, 2000, 2)\r\n    pointLight.castShadow = true\r\n    pointLight.shadow.mapSize.width = 10000;\r\n    pointLight.shadow.mapSize.height = 10000;\r\n    // pointLight.shadow.camera.fov = 60;\r\n    // pointLight.decay = 2;\r\n    // pointLight.penumbra = 0.05;\r\n    pointLight.position.set(800, 800, 800)\r\n    const ambientLight = new AmbientLight(0x343434)\r\n    scene.add(pointLight)\r\n    scene.add(ambientLight)\r\n    // const debufCamera = new CameraHelper(pointLight.shadow.camera)\r\n    // scene.add(debufCamera)\r\n    return pointLight\r\n}\r\n\r\n\r\nexport const initDirectionalLight = (scene) => {\r\n    const direcLight = new DirectionalLight(0xffffff, 1)\r\n    direcLight.castShadow = true\r\n    scene.add(direcLight)\r\n    return direcLight\r\n}\r\n\r\n\r\n/**\r\n * \r\n * @param {string} name 粒子系统对象名称\r\n * @param {Object} options 粒子系统配置参数\r\n * @param {Object} particleProps 粒子的属性\r\n */\r\nexport const createPoints = (name, options, particleProps = {}) => {\r\n    const {imageUrl, range, size, count, opacity} = options\r\n    const texLoader = new TextureLoader()\r\n    const geo = new Geometry()\r\n    const tex = texLoader.load(imageUrl)\r\n    tex.center = new Vector2(0.5, 0.5)\r\n    tex.rotation = particleProps.rotation || 0\r\n    const mat = new PointsMaterial({\r\n        map: tex,\r\n        transparent: true,\r\n        size,\r\n        // needsUpdate: true,\r\n        sizeAttenuation: true,\r\n        opacity,\r\n        blending: AdditiveBlending,\r\n        side: DoubleSide,\r\n        alphaTest: 0.1          // 这样可以使透明背景不渲染\r\n    })\r\n    for (let i = 0; i < count; i++) {\r\n        let x = Math.random() * range - range / 2   // -range/2 ~ range/2\r\n        let y = Math.random() * range / 2            // 0~range/2\r\n        let z = Math.random() * range - range / 2\r\n        const particle = new Vector3(x, y, z)\r\n        for (let key in particleProps) {\r\n            particle[key] = particleProps[key]\r\n        }\r\n        geo.vertices.push(particle)\r\n    }\r\n    const points = new Points(geo, mat)\r\n    points.name = name\r\n    points.castShadow = true\r\n    return points\r\n}\r\n\r\nexport const createSprite = (mat, x, y, z, scale) => {\r\n    const sprite = new Sprite(mat)\r\n    sprite.position.set(x, y, z)\r\n    sprite.scale.set(scale, scale, scale)\r\n    return sprite\r\n}\r\n\r\n","const leaf1Png = process.env.PUBLIC_URL + 'leaf_textures/leaf1.png'\r\nconst leaf2Png = process.env.PUBLIC_URL + 'leaf_textures/leaf2.png'\r\nconst leaf3Png = process.env.PUBLIC_URL + 'leaf_textures/leaf3.png'\r\nconst leaf4Png = process.env.PUBLIC_URL + 'leaf_textures/leaf4.png'\r\nconst defaultRange = 12000\r\nconst defaultCount = 120\r\nconst defaultSize = 500\r\n\r\nexport const leaf1option = {\r\n    imageUrl: leaf1Png,\r\n    range: defaultRange,\r\n    size: defaultSize,\r\n    count: defaultCount,\r\n    opacity: 1\r\n}\r\nexport const leaf1Props = {\r\n    velocityY: 0,\r\n    velocityX: 0,\r\n    velocityZ: 0,\r\n    rotation: Math.PI,\r\n    mass: 0.3,               // 叶子质量\r\n    currentHorizontalOffset: 0,    //当前水平偏移\r\n    maxHorizontalOffset: 10,      //最大水平偏移\r\n    swingVelocity: 0.1,           //叶子摇摆速度\r\n    currentDeg: Math.PI,\r\n    minDeg: Math.PI/2,\r\n    maxDeg: 3*Math.PI/2,\r\n    degVelocity: 0.01,\r\n    falledMatName: 'falledLeaf1Mat',\r\n    groupName: 'falledLeaf1Group'\r\n}\r\n\r\nexport const leaf2option = {\r\n    imageUrl: leaf2Png,\r\n    range: defaultRange,\r\n    size: defaultSize,\r\n    count: defaultCount,\r\n    opacity: 1,\r\n}\r\nexport const leaf2Props = {\r\n    velocityY: 0,\r\n    velocityX: 0,\r\n    velocityZ: 0,\r\n    rotation: Math.PI/2,\r\n    mass: 0.6,\r\n    currentHorizontalOffset: 0,    //当前水平偏移\r\n    maxHorizontalOffset: 14,      //最大水平偏移\r\n    swingVelocity: 0.1,           //叶子摇速度\r\n    currentDeg: Math.PI/2,\r\n    minDeg: Math.PI/2,\r\n    maxDeg: 3*Math.PI/2,\r\n    degVelocity: 0.02,\r\n    falledMatName: 'falledLeaf2Mat',\r\n    groupName: 'falledLeaf2Group',\r\n}\r\n\r\nexport const leaf3option = {\r\n    imageUrl: leaf3Png,\r\n    range: defaultRange,\r\n    size: defaultSize,\r\n    count: defaultCount,\r\n    opacity: 1,\r\n}\r\nexport const leaf3Props = {\r\n    velocityY: 0,\r\n    velocityX: 0,\r\n    velocityZ: 0,\r\n    rotation: Math.PI,\r\n    mass: 0.9,\r\n    currentHorizontalOffset: 0,    //当前水平偏移\r\n    maxHorizontalOffset: 10,      //最大水平偏移\r\n    swingVelocity: 0.2,           //叶子摇速度\r\n    currentDeg: Math.PI,\r\n    minDeg: Math.PI/2,\r\n    maxDeg: 3*Math.PI/2,\r\n    degVelocity: 0.015,\r\n    falledMatName: 'falledLeaf3Mat',\r\n    groupName: 'falledLeaf3Group',\r\n}\r\n\r\nexport const leaf4option = {\r\n    imageUrl: leaf4Png,\r\n    range: defaultRange,\r\n    size: defaultSize,\r\n    count: defaultCount,\r\n    opacity: 1,\r\n}\r\nexport const leaf4Props = {\r\n    velocityY: 0,\r\n    velocityX: 0,\r\n    velocityZ: 0,\r\n    rotation: Math.PI,\r\n    mass: 1.4,\r\n    currentHorizontalOffset:11,    //当前水平偏移\r\n    maxHorizontalOffset: 9,      //最大水平偏移\r\n    swingVelocity: 0.18,           //叶子摇速度\r\n    currentDeg: Math.PI,\r\n    minDeg: Math.PI/2,\r\n    maxDeg: 3*Math.PI/2,\r\n    degVelocity: 0.013,\r\n    falledMatName: 'falledLeaf4Mat',\r\n    groupName: 'falledLeaf4Group',\r\n}","import {createSprite} from './MyThreeUtil'\r\n\r\n/**\r\n * 叶子的自由落体\r\n * @param {any} particle 粒子\r\n * @param {number} range 粒子运动范围\r\n * @param {number} groundTopOffest 地面距离x-z平面的偏移量\r\n */\r\nexport const freeFall = (particle, range, groundTopOffest, leafMats, groups, naturalProps) => {\r\n    const {k} = naturalProps\r\n    // const {falledLeaf2Mat} = leafMats\r\n    const mat = leafMats[particle.falledMatName]\r\n    const grp = groups[particle.groupName]\r\n    particle.velocityY += particle.mass * k // mass为叶子的重量 k为一个常量 \r\n    particle.y -= particle.velocityY\r\n    if (particle.y <= groundTopOffest+10) {\r\n        particle.y = range\r\n        particle.velocityY = 0\r\n        const leaf = createSprite(mat, particle.x, -935, particle.z, 500)\r\n        grp.add(leaf)\r\n    }\r\n}\r\n\r\nconst spining = (particle, map, naturalProps) => {\r\n    const {minDeg, maxDeg} = particle\r\n    particle.currentDeg += particle.degVelocity\r\n    map.rotation = particle.currentDeg\r\n    if (particle.currentDeg > maxDeg || particle.currentDeg < minDeg) {\r\n        particle.degVelocity = - particle.degVelocity\r\n    }\r\n}\r\n\r\n/**\r\n * \r\n * @param {any} particle 粒子\r\n * @param {number} range 粒子运动范围\r\n * @param {Object} naturalProps 自然环境属性\r\n */\r\nexport const particleTrajectoryWithWind = (particle, range, naturalProps) => {\r\n    const {windDirection, windStrength, k} = naturalProps\r\n    //三个方向的速度\r\n    particle.velocityX += Math.sin(windDirection) * windStrength * k\r\n    particle.velocityZ += -Math.cos(windDirection) * windStrength * k\r\n    // 三个方向的坐标\r\n    particle.x += particle.velocityX\r\n    particle.z += particle.velocityZ\r\n    if (particle.x > range){\r\n        particle.x = -range\r\n        particle.velocityX = 0\r\n    }\r\n    if (particle.x < -range) {\r\n        particle.x = range\r\n        particle.velocityX = 0\r\n    }\r\n    if (particle.z > range){\r\n        particle.z = -range\r\n        particle.velocityZ = 0\r\n    }\r\n    if (particle.z < -range) {\r\n        particle.z = range\r\n        particle.velocityZ = 0\r\n    }\r\n}\r\n\r\n/**\r\n * 无风时的叶子运动 包括下落、运动、旋转\r\n * @param {any} particle 粒子\r\n * @param {Object} naturalProps 自然环境属性\r\n */\r\nexport const particleTrajectoryWithoutWind = (particle, map, naturalProps) => {\r\n    // particle.velocityX = particle.velocityZ = 0\r\n    /*\r\n        如果速度大于0，速度值减小至0， 如果速度小于0，速度值增加至0，如果速度为0 什么也不做\r\n    */\r\n   const {a} = naturalProps\r\n    \r\n    if ( particle.velocityX > 0 ) {\r\n        particle.velocityX -= a\r\n        if (particle.velocityX <= 0) {\r\n            particle.velocityX = 0\r\n        }\r\n    }\r\n    if ( particle.velocityZ > 0 ) {\r\n        particle.velocityZ -= a\r\n        if (particle.velocityZ <= 0) {\r\n            particle.velocityZ = 0\r\n        }\r\n    }\r\n    if ( particle.velocityX < 0 ) {\r\n        particle.velocityX += a\r\n        if (particle.velocityX >= 0) {\r\n            particle.velocityX = 0\r\n        }\r\n    }\r\n    if ( particle.velocityZ < 0 ) {\r\n        particle.velocityZ += a\r\n        if (particle.velocityZ >= 0) {\r\n            particle.velocityZ = 0\r\n        }\r\n    }\r\n    //摇摆\r\n    if(particle.currentHorizontalOffset <= -particle.maxHorizontalOffset || particle.currentHorizontalOffset >= particle.maxHorizontalOffset) {\r\n        particle.swingVelocity = 0-(particle.swingVelocity)  //速度值取反\r\n    }\r\n    particle.currentHorizontalOffset += particle.swingVelocity\r\n    particle.x += particle.currentHorizontalOffset\r\n    particle.z += particle.currentHorizontalOffset\r\n\r\n    spining(particle, map, naturalProps)\r\n}","import React, {useState} from 'react'\r\nimport '@style/Dics.scss'\r\nimport Slider from 'antd/es/slider'\r\nexport default function Disc({onTurn, discLabel, sliderLabel}) {\r\n    \r\n    const [deg, setDeg] = useState(0)\r\n    const changeDeg = (newDeg) => {\r\n        setDeg(newDeg)\r\n        onTurn(newDeg)\r\n    }\r\n\r\n    const marks = {\r\n        0: '北',\r\n        90: '东',\r\n        180: '南',\r\n        270: '西',\r\n        360: '北'\r\n    }\r\n\r\n    return (\r\n        <div className=\"disc\">\r\n            <div className=\"outer\">\r\n                <p className='disc-label'>{discLabel}</p>\r\n                <div className=\"inner\" >\r\n                    <div className=\"circle\" style={{transform: `rotate(${deg}deg)`}}>\r\n                        <div className=\"pointer\"></div>\r\n                        <div className=\"arrow arrow_left\"></div>\r\n                        <div className=\"arrow arrow_right\"></div>\r\n                    </div>\r\n                </div>\r\n                <p id='north' className=\"direction\">北</p>\r\n                <p id='south' className=\"direction\">南</p>\r\n                <p id='west' className=\"direction\">西</p>\r\n                <p id='east' className=\"direction\">东</p>\r\n            </div>\r\n            <p className=\"slider-label\">{sliderLabel}</p>\r\n            <Slider type=\"primary\" min={0} max={360} onChange={changeDeg} marks={marks} tooltipVisible={false}></Slider>\r\n\r\n        </div>\r\n    )\r\n}","import React, {useState} from 'react'\r\nimport {Slider} from 'antd'\r\nimport '@style/WindStrength.scss'\r\nexport default function WindStrength({onChange}) {\r\n    const [strength, setStrength] = useState(0)\r\n\r\n    const foo = (v) => {\r\n        setStrength(v)\r\n        onChange(v)\r\n    }\r\n    return (\r\n        <div className=\"wind-strength\">\r\n            <p className=\"slider-label\">调整风力</p>\r\n            <Slider min={0} max={5} step={0.1} onChange={foo}></Slider>\r\n            <p className=\"current-strength\">当前{strength}</p>\r\n        </div>\r\n    )\r\n}","import React, { useEffect, useRef } from 'react'\r\nimport {initCamera, initRenderer, initOrbitControls, initScene, createPoints, \r\n    initDirectionalLight, createSprite} from '../utils/MyThreeUtil'\r\nimport {AxesHelper, PlaneBufferGeometry, TextureLoader, Mesh, Points, CubeTextureLoader,\r\n    RepeatWrapping, \r\n    SpriteMaterial, \r\n    Group,\r\n    MeshLambertMaterial} from 'three'\r\n// import {GLTFLoader} from \"three/examples/jsm/loaders/GLTFLoader\"\r\nimport {leaf1option, leaf1Props, leaf2option, leaf2Props,leaf3option, leaf3Props,\r\n        leaf4option, leaf4Props } from '../config/leaf'\r\nimport {particleTrajectoryWithWind, particleTrajectoryWithoutWind, freeFall} from '../utils/movement'\r\nimport Disc from './Disc'\r\nimport WindStrength from './WindStrength'\r\nconst pub = process.env.PUBLIC_URL\r\nconst groundJpg = pub + '/ground/Ground19/Ground19_Color.jpg'\r\nconst groundAoJpg = pub + '/ground/Ground19/Ground19_AO.jpg'\r\nconst skynx = pub + '/sky/forest2/nx.png'\r\nconst skyny = pub + '/sky/forest2/ny.png'\r\nconst skynz = pub + '/sky/forest2/nz.png'\r\nconst skypx = pub + '/sky/forest2/px.png'\r\nconst skypy = pub + '/sky/forest2/py.png'\r\nconst skypz = pub + '/sky/forest2/pz.png'\r\nconst windSound = pub + '/audios/Wind_grass_wispy_breeze.mp3'\r\nconst falledLeaf1Png = pub + '/leaf_textures/leaf1_falled.png'\r\nconst falledLeaf2Png = pub + '/leaf_textures/leaf2_falled.png'\r\nconst falledLeaf3Png = pub + '/leaf_textures/leaf3_falled.png'\r\nconst falledLeaf4Png = pub + '/leaf_textures/leaf4_falled.png'\r\n\r\nexport default function OutPut() {\r\n    \r\n    // let pointsArr = []\r\n    const naturalProps = {\r\n        windDirection: Math.PI,       // 范围0~2PI 风向影响x轴 和z轴\r\n        windStrength: 0,                   //风力\r\n        k: 0.01,                              // 系数 控制最终数值\r\n        a: 0.01   //当风向由其他值变为0 速度逐渐减慢的加速度\r\n\r\n    }\r\n    // let rotation = Math.PI      //落叶旋转角度 开始是为180度\r\n    const groundTopOffest = -1000   //地面的y轴坐标\r\n    const equipment = {\r\n        // scene: null,\r\n        // camera: null,\r\n        // renderer: null\r\n    }\r\n    const groups = {}   \r\n    const materials = {}\r\n    const audioRef = useRef()\r\n\r\n\r\n    // 重绘场景\r\n    const rerender = () => {\r\n        const {renderer, scene, camera} = equipment\r\n        renderer.render(scene, camera)\r\n    }\r\n\r\n\r\n    const addAxesHelper = () => {\r\n        const {scene} = equipment\r\n        const axesHelper = new AxesHelper(200);\r\n        scene.add(axesHelper)\r\n        rerender()\r\n    }\r\n    const addGround = () => {\r\n        const {scene} = equipment\r\n        const groundGeo = new PlaneBufferGeometry(20000, 20000)\r\n        const ground = new Mesh(groundGeo, materials.groundMat)\r\n        ground.receiveShadow = true\r\n        ground.rotation.x = -Math.PI / 2\r\n        ground.position.y = groundTopOffest\r\n        scene.add(ground)\r\n        rerender()\r\n    }\r\n\r\n    // }\r\n\r\n    // const addTrees = () => {\r\n    //     const {scene} = equipment\r\n    //     const gltfLoader = new GLTFLoader()\r\n    //     gltfLoader.load(treeGLTF, (gltf) => {\r\n    //         // console.log(gltf)\r\n    //         const treeModel = gltf.scene\r\n    //         // treeModel.position.set(0, -500, 0)\r\n    //         treeModel.translateX(-500)\r\n    //         treeModel.translateY(-1075)\r\n    //         treeModel.scale.set(60, 60, 60)\r\n    //         //setShadow(treeModel)\r\n    //         treeModel.receiveShadow = true\r\n    //         treeModel.castShadow = true\r\n    //         scene.add(treeModel)\r\n    //     })\r\n    //     rerender()\r\n    // }\r\n\r\n    /**\r\n     * 加载所有材质\r\n     */\r\n    const createMaterials = () => {\r\n        const loader = new TextureLoader()\r\n        //落叶材质\r\n        const falledLeaf1Map = loader.load(falledLeaf1Png)\r\n        const falledLeaf1Mat = new SpriteMaterial( {\r\n            map: falledLeaf1Map,\r\n            transparent: true,\r\n        })\r\n        const falledLeaf2Map = loader.load(falledLeaf2Png)\r\n        const falledLeaf2Mat = new SpriteMaterial( {\r\n            map: falledLeaf2Map,\r\n            transparent: true,\r\n        })\r\n        const falledLeaf3Map = loader.load(falledLeaf3Png)\r\n        const falledLeaf3Mat = new SpriteMaterial( {\r\n            map: falledLeaf3Map,\r\n            transparent: true,\r\n        })\r\n        const falledLeaf4Map = loader.load(falledLeaf4Png)\r\n        const falledLeaf4Mat = new SpriteMaterial( {\r\n            map: falledLeaf4Map,\r\n            transparent: true,\r\n        })\r\n        \r\n        \r\n        //地面材质\r\n        const groundTex = loader.load(groundJpg)\r\n        // const groundNor = texLoader.load(groundNorJpg)\r\n        const groundAo = loader.load(groundAoJpg)\r\n        // const groundDis = texLoader.load(groundDisJpg)\r\n        // const groundRgh = texLoader.load(groundRghJpg)\r\n        groundTex.wrapT = RepeatWrapping\r\n        groundTex.wrapS = RepeatWrapping\r\n        groundTex.repeat.set(10, 10)\r\n        const groundMat = new MeshLambertMaterial({\r\n            map: groundTex,\r\n            // normalMap: groundNor,\r\n            aoMap: groundAo,\r\n            // displacementMap: groundDis,\r\n            // roughnessMap: groundRgh,\r\n            // roughness: 1,\r\n            skinning: true,\r\n            flatShading: true,\r\n            color: 0xE5B262\r\n        })\r\n\r\n        Object.assign(materials, {falledLeaf1Mat, falledLeaf2Mat, falledLeaf3Mat, falledLeaf4Mat, groundMat})\r\n    }\r\n\r\n    /**\r\n     * 粒子(树叶)运动轨迹\r\n     * @param {any} particle 粒子\r\n     * @param {number} range 落叶范围\r\n     * @param {number} groundTopOffest 地面偏移量\r\n     * @param {Object} map 叶子的贴图\r\n     */\r\n    const particleTrajectory = (particle, range, groundTopOffest, map) => {\r\n        const {windStrength} = naturalProps\r\n        const {falledLeaf1Mat, falledLeaf2Mat, falledLeaf3Mat, falledLeaf4Mat} = materials\r\n        freeFall(particle, range, groundTopOffest, {falledLeaf1Mat, falledLeaf2Mat, falledLeaf3Mat, falledLeaf4Mat}, groups, naturalProps)\r\n        if (windStrength === 0) {\r\n            // particle.velocityX = particle.velocityZ = 0\r\n            particleTrajectoryWithoutWind(particle, map, naturalProps)\r\n        } else {\r\n            particleTrajectoryWithWind(particle, range, naturalProps)\r\n        }\r\n        \r\n    }\r\n\r\n    // 场景动画\r\n    const animate = () => {\r\n        const {scene} = equipment\r\n        \r\n        scene.children.forEach(item => {\r\n            if (item instanceof Points) {\r\n                const vertices = item.geometry.vertices\r\n                const map = item.material.map\r\n                vertices.forEach(particle => {\r\n                    particleTrajectory(particle, 5500, groundTopOffest, map)\r\n                })\r\n                item.geometry.verticesNeedUpdate = true;\r\n            }\r\n        })\r\n        requestAnimationFrame(animate)\r\n        rerender()\r\n    }\r\n\r\n    //添加多种叶子\r\n    const addLeaves = () => {\r\n        const {scene} = equipment\r\n        const leaf1Points = createPoints('leaf1', leaf1option, leaf1Props)\r\n        const leaf2Points = createPoints('leaf2', leaf2option, leaf2Props)\r\n        const leaf3Points = createPoints('leaf3', leaf3option, leaf3Props)\r\n        // const leaf4Points = createPoints('leaf4', leaf4option, leaf4Props)\r\n        const falledLeaf1Group = new Group()\r\n        const falledLeaf2Group = new Group()\r\n        const falledLeaf3Group = new Group()\r\n        const falledLeaf4Group = new Group()\r\n\r\n        window.group2 = falledLeaf2Group\r\n        // pointsArr.push(leaf1Points)\r\n        // pointsArr.push(leaf2Points)\r\n        // pointsArr.push(leaf3Points)\r\n        // pointsArr.push(leaf4Points)\r\n        scene.add(leaf1Points, leaf2Points, leaf3Points)\r\n        scene.add(falledLeaf1Group, falledLeaf2Group, falledLeaf3Group, falledLeaf4Group)\r\n        Object.assign(groups, {falledLeaf1Group, falledLeaf2Group, falledLeaf3Group, falledLeaf4Group})\r\n        // console.log(scene.children)\r\n        // console.log(groups)\r\n        animate()\r\n    }\r\n\r\n    const init = () => {\r\n        const webglOutput = document.getElementById('webgl-output')\r\n\r\n        const scene = initScene() \r\n        // scene.fog = new Fog( 0xF5F5F5, 100, 10000 );  //雾化\r\n        const camera = initCamera(webglOutput)\r\n        const renderer = initRenderer(webglOutput, 0xCBF4FC)\r\n        initDirectionalLight(scene)\r\n        camera.position.set(1500, 150, -1500)\r\n        // camera.lookAt(0, 2100, 0)\r\n        webglOutput.appendChild(renderer.domElement)\r\n        // audioRef.current.volume = 0 // 风声初始为0\r\n        const controler = initOrbitControls(camera, renderer, () => {\r\n            rerender()\r\n        })\r\n        controler.maxPolarAngle = Math.PI / 2.1;\r\n        controler.minDistance = 500\r\n        controler.maxDistance = 5000\r\n        equipment.scene = scene\r\n        equipment.camera = camera\r\n        equipment.renderer = renderer\r\n\r\n        renderer.render(scene, camera)\r\n    }\r\n\r\n    const addSky = () => {\r\n        const {scene} = equipment\r\n        const loader = new CubeTextureLoader()\r\n        // 分离的场景图\r\n        const urls = [\r\n            skypx, skynx,\r\n            skypy, skyny,\r\n            skypz, skynz\r\n        ]\r\n        loader.load(urls, tex => {\r\n            scene.background = tex\r\n        })\r\n    } \r\n\r\n    \r\n\r\n    useEffect(() => {\r\n        createMaterials()\r\n        init()\r\n        addSky()\r\n        addAxesHelper()\r\n        addGround()\r\n        // addTrees()\r\n        addLeaves()\r\n        return ()=>{}\r\n    }, [])\r\n\r\n    const changeWindDirection = (degValue) => {\r\n        // rotation += Math.PI / 4 //改变叶子的方向 这个不好做\r\n        naturalProps.windDirection = degValue* Math.PI / 180    //角度转弧度\r\n        // console.log(naturalProps.windDirection)\r\n    }\r\n\r\n    const changeWindStrength = (strength) => {\r\n        naturalProps.windStrength = strength\r\n        audioRef.current.volume = strength * 0.2\r\n        audioRef.current.muted = false\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <div className=\"left\">\r\n                <Disc onTurn={changeWindDirection} discLabel='风的吹向' sliderLabel='调整风向'></Disc>\r\n                <WindStrength onChange={changeWindStrength}></WindStrength>\r\n                <p style={{fontSize: '18px'}}>服务器上部署时，由于纹理、模型资源过大和服务器带宽不够，会导致长时间加载不出来，暂时没有好的解决方案，因此阉割了树模型和高配地面纹理。</p>\r\n            </div>\r\n            <div id=\"webgl-output\"></div>\r\n            <audio ref={audioRef} src={windSound} loop={true} autoPlay={true} muted></audio>\r\n        </>\r\n    )\r\n}","import React from 'react'\r\nimport OutPut from '@components/OutPut'\r\nimport '@style/home.scss'\r\nexport default function Home() {\r\n    return (\r\n        <div className=\"home\">\r\n            <OutPut />\r\n        </div>\r\n    )\r\n}","import React from 'react';\nimport {HashRouter, Route, Switch} from 'react-router-dom'\nimport Home from '@views/Home'\nfunction App() {\n  return (\n    <HashRouter>\n        <Switch>\n            <Route path=\"/\">\n              <Home></Home>\n            </Route>\n        </Switch>\n    </HashRouter>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'antd/dist/antd.css'\nimport './index.css';\nimport App from './App.js';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}